{
  "version": 3,
  "sources": ["../bundle-dZl033/checked-fetch.js", "../../../forward.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-dZl033/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-dZl033/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/roer/Project/dingding-forward/.wrangler/tmp/dev-dPMBUB",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// \u5904\u7406CORS\u54CD\u5E94\u5934\nfunction corsHeaders() {\n  return {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'POST, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type, timestamp, sign',\n    'Access-Control-Max-Age': '86400',\n  };\n}\n\n// \u8BA1\u7B97\u53D1\u9001\u6D88\u606F\u7684\u7B7E\u540D\nasync function calculateBotSignature(timestamp, secret) {\n  const stringToSign = `${timestamp}\\n${secret}`;\n  const encoder = new TextEncoder();\n  const data = encoder.encode(stringToSign);\n  const key = encoder.encode(secret);\n  \n  const cryptoKey = await crypto.subtle.importKey(\n    'raw',\n    key,\n    { name: 'HMAC', hash: 'SHA-256' },\n    false,\n    ['sign']\n  );\n  \n  const signature = await crypto.subtle.sign('HMAC', cryptoKey, data);\n  return btoa(String.fromCharCode(...new Uint8Array(signature)));\n}\n\n// \u9A8C\u8BC1\u6765\u81EA\u7FA4\u7684\u6D88\u606F\u7B7E\u540D\nasync function verifyOutgoingSignature(request, content, secret) {\n  const timestamp = request.headers.get('timestamp');\n  const sign = request.headers.get('sign');\n\n  if (!timestamp || !sign) {\n    return false;\n  }\n\n  // \u9489\u9489outgoing\u7B7E\u540D\u8BA1\u7B97\u89C4\u5219\uFF1A\u628Atimestamp\u3001token\u548C\u8BF7\u6C42\u4F53\u62FC\u63A5\u540E\u505ASHA256\n  const stringToSign = `${timestamp}\\n${secret}\\n${content}`;\n  const encoder = new TextEncoder();\n  const data = encoder.encode(stringToSign);\n  \n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const calculatedSign = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n\n  return sign.toLowerCase() === calculatedSign.toLowerCase();\n}\n\n// \u6784\u5EFA\u8F6C\u53D1\u6D88\u606F  \nfunction buildForwardMessage(content, senderInfo) {  \n  console.log('buildForwardMessage:', content, senderInfo);\n  // \u57FA\u4E8E\u539F\u59CB\u6D88\u606F\u7C7B\u578B\u6784\u5EFA\u8F6C\u53D1\u6D88\u606F  \n  const baseMessage = {  \n    msgtype: content.msgtype  \n  };  \n\n  // \u6839\u636E\u4E0D\u540C\u6D88\u606F\u7C7B\u578B\u5904\u7406  \n  switch (content.msgtype) {  \n    case 'text':  \n      baseMessage.text = {  \n        content: `@${senderInfo.senderNick} \u8BF4\uFF1A\\n${content.text.content}`  \n      };  \n      break;  \n    \n    case 'markdown':  \n      baseMessage.markdown = {  \n        title: content.markdown.title,  \n        text: `#### \u6765\u81EA @${senderInfo.senderNick} \u7684\u6D88\u606F\uFF1A\\n${content.markdown.text}`  \n      };  \n      break;  \n    \n    case 'link':  \n      baseMessage.link = {  \n        ...content.link,  \n        text: `\u6765\u81EA @${senderInfo.senderNick} \u7684\u94FE\u63A5\uFF1A\\n${content.link.text}`  \n      };  \n      break;  \n    \n    case 'actionCard':  \n      if (content.actionCard.btns) {  \n        // \u6574\u4F53\u8DF3\u8F6C\u7684actionCard  \n        baseMessage.actionCard = {  \n          ...content.actionCard,  \n          text: `#### \u6765\u81EA @${senderInfo.senderNick} \u7684\u5361\u7247\u6D88\u606F\uFF1A\\n${content.actionCard.text}`  \n        };  \n      } else {  \n        // \u72EC\u7ACB\u8DF3\u8F6C\u7684actionCard  \n        baseMessage.actionCard = {  \n          ...content.actionCard,  \n          text: `#### \u6765\u81EA @${senderInfo.senderNick} \u7684\u5361\u7247\u6D88\u606F\uFF1A\\n${content.actionCard.text}`  \n        };  \n      }  \n      break;  \n    \n    case 'feedCard':  \n      baseMessage.feedCard = content.feedCard;  \n      break;  \n    \n    default:  \n      // \u5BF9\u4E8E\u672A\u77E5\u7C7B\u578B\uFF0C\u964D\u7EA7\u4E3A\u6587\u672C\u6D88\u606F  \n      baseMessage.msgtype = 'text';  \n      baseMessage.text = {  \n        content: `\u6765\u81EA @${senderInfo.senderNick} \u7684\u672A\u77E5\u7C7B\u578B\u6D88\u606F`  \n      };  \n  }  \n\n  return baseMessage;  \n}  \n\n// \u53D1\u9001\u6D88\u606F\u5230\u76EE\u6807\u7FA4  \nasync function forwardToDingtalk(message, targetWebhook, botSecret) {  \n  try {  \n    const timestamp = Date.now().toString();  \n    const sign = await calculateBotSignature(timestamp, botSecret);  \n    \n    const webhookUrl = `${targetWebhook}&timestamp=${timestamp}&sign=${encodeURIComponent(sign)}`;  \n\n    const response = await fetch(webhookUrl, {  \n      method: 'POST',  \n      headers: {  \n        'Content-Type': 'application/json',  \n      },  \n      body: JSON.stringify(message),  \n    });  \n\n    if (!response.ok) {  \n      throw new Error(`HTTP error! status: ${response.status}`);  \n    }  \n\n    return await response.json();  \n  } catch (error) {  \n    console.error('Error forwarding message:', error);  \n    throw error;  \n  }  \n}  \n\nexport default {  \n  async fetch(request, env) {  \n    // \u5904\u7406 OPTIONS \u8BF7\u6C42  \n    if (request.method === 'OPTIONS') {  \n      return new Response(null, {  \n        status: 204,  \n        headers: corsHeaders(),  \n      });  \n    }  \n\n    // \u53EA\u5904\u7406POST\u8BF7\u6C42  \n    if (request.method !== 'POST') {  \n      return new Response('Method not allowed', {  \n        status: 405,  \n        headers: corsHeaders(),  \n      });  \n    }  \n\n    try {  \n      const clonedRequest = request.clone();  \n      const rawBody = await clonedRequest.text();  \n      \n      // \u9A8C\u8BC1\u6765\u81EA\u7FA4\u7684\u6D88\u606F\u7B7E\u540D  \n      const isValid = await verifyOutgoingSignature(  \n        request,  \n        rawBody,  \n        env.OUTGOING_1_SECRET  \n      );  \n\n      if (!isValid) {  \n        return new Response('Invalid signature', {  \n          status: 401,  \n          headers: corsHeaders(),  \n        });  \n      }  \n\n      // \u89E3\u6790\u6D88\u606F\u5185\u5BB9  \n      const content = JSON.parse(rawBody);  \n\n      // \u6784\u5EFA\u53D1\u9001\u8005\u4FE1\u606F  \n      const senderInfo = {  \n        senderNick: content.senderNick,  \n        senderId: content.senderId,  \n        senderStaffId: content.senderStaffId,  \n      };  \n\n      // \u6784\u5EFA\u8F6C\u53D1\u6D88\u606F  \n      const forwardMessage = buildForwardMessage(content, senderInfo);  \n\n      // \u8F6C\u53D1\u5230\u76EE\u6807\u7FA4  \n      const result = await forwardToDingtalk(  \n        forwardMessage,  \n        env.SEND_URL_1,  \n        env.BOT_1_SECRET  \n      );  \n\n      return new Response(JSON.stringify(result), {  \n        status: 200,  \n        headers: {  \n          'Content-Type': 'application/json',  \n          ...corsHeaders(),  \n        },  \n      });  \n\n    } catch (error) {  \n      console.error('Error:', error);  \n      return new Response(JSON.stringify({ error: error.message }), {  \n        status: 500,  \n        headers: {  \n          'Content-Type': 'application/json',  \n          ...corsHeaders(),  \n        },  \n      });  \n    }  \n  },  \n};", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/roer/Project/dingding-forward/forward.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/roer/Project/dingding-forward/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/roer/Project/dingding-forward/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/roer/Project/dingding-forward/forward.js\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/roer/Project/dingding-forward/.wrangler/tmp/bundle-dZl033/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/roer/Project/dingding-forward/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/roer/Project/dingding-forward/.wrangler/tmp/bundle-dZl033/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/roer/Project/dingding-forward/.wrangler/tmp/bundle-dZl033/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
